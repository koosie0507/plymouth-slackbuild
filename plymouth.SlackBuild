#!/bin/sh

NAME="plymouth"
PNAME=${NAME}		# Package name (Useful for changing case, etc.)
VERSION=${VERSION:-"0.9.5"}		# Program version
PVERSION=${VERSION}	# Package version (Useful for removing "-"s, CVS/SVN builds, etc.)
ARCH=${ARCH:-"x86_64"}	# Package architecture
BUILD=${BUILD:-1}	# Build number
TAG=${TAG:-"_cus"}	# Packager initials (use your own)

CWD=`pwd`
TMP=${TMP:-"/tmp"}	# Location to compile the source
PKG="${TMP}/package-${NAME}"	# Location to build the package (use "package-$NAME" to avoid poss. conflicts)
OUTPUT=${OUTPUT:-"${CWD}"}	# Location to save final package.

# List the package documentation.  Adjust accordingly.
PDOCS="ABOUT-NLS AUTHORS COPYING ChangeLog INSTALL NEWS README TODO"
case $ARCH in
  i?86)
  SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
  ;;
  x86_64)
  SLKCFLAGS="-O2 -fPIC"
  SLKLDFLAGS="-L/usr/lib64"
  LIBDIRSUFFIX="64"
  ;;
  *)
  echo "${ARCH}: unsupported arch" && exit 1
  ;;
esac

# Let's make sure that root is building the package
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root!"
    exit 1
fi

set -e 
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PRGNAM}.log' ERR

if [ ! -d $TMP ]; then
  mkdir -p $TMP		# location to build the source
fi

rm -rf $PKG		# Get rid of any leftovers
mkdir -p $PKG		# Make sure $PKG and $TMP (-p switch) exist

if [ ! -d $OUTPUT ]; then
  mkdir -p $OUTPUT	# Make sure $OUTPUT exists
fi

cd $TMP
rm -rf $NAME-$VERSION
tar -xvf $CWD/$NAME-$VERSION.tar.*
cd $NAME-$VERSION

# Correct general permissions/ownership:

chown -R root.root .
find . -perm 777 -exec chmod 755 {} \;
find . -perm 775 -exec chmod 755 {} \;
find . -perm 711 -exec chmod 755 {} \;
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 600 -exec chmod 644 {} \;
find . -perm 555 -exec chmod 755 {} \;
find . -perm 511 -exec chmod 755 {} \;
find . -perm 444 -exec chmod 644 {} \;
find . -perm 440 -exec chmod 644 {} \;
find . -perm 400 -exec chmod 644 {} \;

LDFLAGS="$SLKLDFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var/lib \
  --program-prefix="" \
  --docdir=/usr/doc/${PNAME}-${PVERSION} \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --disable-static \
  --enable-shared \
  --disable-upstart-monitoring \
  --disable-systemd-integration \
  --with-udev \
  --with-release-file=/etc/slackware-version \
  --build=$ARCH-slackware-linux
make
make install DESTDIR=$PKG
cp -vf ${CWD}/{init.patch,plymouth-update-initrd} ${PKG}/usr/libexec/plymouth/

echo "stripping binaries"
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

echo "compressing man pages"
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    # gzip the man pages:
    find . -name "*.?" -type f 2> /dev/null | xargs gzip -9 2> /dev/null
    # re-do the symlinks:
    for i in `find . -type l` ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
  )
fi

echo "compressing info pages"
if [ -d $PKG/usr/info ]; then
  gzip -9 $PKG/usr/info/*.info
  rm -f $PKG/usr/info/dir
fi

# Create package docs:
mkdir -p $PKG/usr/doc/$PNAME-$PVERSION
cp -a $PDOCS $PKG/usr/doc/$PNAME-$PVERSION
# Include a copy of the SlackBuild in the Docs.  Would /usr/src/SlackBuilds be better?
cat $CWD/$PNAME.SlackBuild > $PKG/usr/doc/$PNAME-$PVERSION/$PNAME.SlackBuild
chmod 644 $PKG/usr/doc/$PNAME-$PVERSION/*

if [ -e $CWD/slack-desc ]; then
  mkdir -p $PKG/install
  cat $CWD/slack-desc > $PKG/install/slack-desc
fi

# Add install script:
if [ -e $CWD/doinst.sh ]; then
  cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi

# Build the package:
cd $PKG
makepkg -l y -c n $OUTPUT/$PNAME-$PVERSION-$ARCH-$BUILD$TAG.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $PKG
fi